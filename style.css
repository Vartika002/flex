/* Flexbox concept and properties */
* {
  margin: 0;
  padding: 0;
}
/* .flexcontainer{
    border:2px solid blue;
    height:80vh;
    display:flex; */
/* flex-direction: row-reverse; */
/* flex-direction: column; */
/* flex-direction: column-reverse; */
/* justify-content: center; */
/* justify-content: flex-end; */
/* justify-content: flex-start; */
/* justify-content: end; */
/* justify-content: space-around; */
/* justify-content: space-evenly; */
/* align-items: center; */
/* align-items: flex-end; */
/* align-items: flex-start; */

/* To make it responsive */
/* flex-wrap: wrap;     */
/* flex-wrap: wrap-reverse; */

/* flex-flow have two properties flex-direction or flex-wrap generally we add coluumn and 
flex-wrap as wrap */
/* flex-flow: column wrap; */
/* } */

/* .flexitem{
    background-color: aqua;
    border: 2px solid black;
    margin:12px;
    width:110px;
    height:80px
} */

/* .item1{
    order: 3;
    flex-grow: 3; 
     flex-shrink: 2;
    align-self: center;
} */
/* item2 has order 4 so it comes at the last */
/* .item2{
    order:4
} */

/* Grid concept & properties */
/* The difference between the values inline-grid and grid is that the inline-grid will make the 
element inline while grid will make it a block-level element. */
.container {
  background-color: red;
  /* width: 620px;  */
  height: 520px;
  display: grid;
  /* we can write as grid-template-rows: 90px 90px 90px or we can use repeat function*/
  /* grid-template-rows: 90px 90px 90px;
      grid-template-columns: 90px 90px 90px; */
  /* grid-template-rows: repeat(3,90px);
      grid-template-columns: repeat(3,90px); */
  /* grid-template-rows: repeat(3,1fr);
      grid-template-columns: repeat(3,1fr); */
  grid-template-rows: 133px 1fr 33px;
  grid-template-columns: 1fr 1fr 1fr;
  row-gap: 13px;
  column-gap: 13px;
  /* justify-items: start; */
  /* justify-items: center; */
  /* align-items:center; */
  place-items: center;
}

.item {
  background-color: aqua;
  width: 80px;
  height: 80px;
}

.item1 {
  background-color: blueviolet;
  /* we can use either grid-column-start/end or grid-column: 1 / span 3 */
  /* grid-column-start: 1;
    grid-column-end: 4; */
  grid-column: 1 / span 3;
  width: 100vw;
}

.item2 {
  /* we can use either justify-self align-slef one by one or directly use place-item  */
  /* justify-self: center;
    align-self:center; */
  /* place-self: center; */
}

.footer {
  background-color: blueviolet;
  grid-column-start: 1;
  grid-column-end: 4;
  width: 100vw;
}
